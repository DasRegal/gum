{
    #include <stdint.h>
    #include "../src/mdb/mdb.h"
    source("src/mdb/mdb.c")
    uint32_t print_buf[36];

    void TestBufPrint(const uint16_t *pucBuffer, uint8_t len)
    {
        for (int i = 0; i < len; i++)
        {
            print_buf[i] = *pucBuffer++;
        }
    }

    mdv_dev_init_struct_t mdb_dev_struct;
    mdb_dev_struct.send_callback = TestBufPrint;
    MdbInit(mdb_dev_struct);

    describe("RESET command") do
        MdbSendCommand(MDB_RESET_CMD_E, 0, NULL);

        it("must consist of a valid packet")
        do
            uint32_t ref_buf[2] = { 0x110, 0x10 };
            arr_to_eq(ref_buf, print_buf, 2);
        end
    end

    describe("SETUP command") do
        it("Config data must consist of a valid packet")
        do
            uint8_t  buf[4]     = {             0x3, 0x1, 0x2, 0x3       };
            uint32_t ref_buf[7] = { 0x111, 0x0, 0x3, 0x1, 0x2, 0x3, 0x1a };
            MdbSendCommand(MDB_SETUP_CMD_E, MDB_SETUP_CONF_DATA_SUBCMD, buf);
            arr_to_eq(ref_buf, print_buf, 7);
        end

        it("Max/Min Price must consist of a valid packet")
        do
            uint8_t  buf[4]     = {             0x0, 0x64, 0x0, 0x32       };
            uint32_t ref_buf[7] = { 0x111, 0x1, 0x0, 0x64, 0x0, 0x32, 0xa8 };
            MdbSendCommand(MDB_SETUP_CMD_E, MDB_SETUP_PRICE_SUBCMD, buf);
            arr_to_eq(ref_buf, print_buf, 7);
        end
    end

    describe("POLL command") do
        it("must consist of a valid packet")
        do
            uint32_t ref_buf[2] = { 0x112, 0x12 };
            MdbSendCommand(MDB_POLL_CMD_E, 0, NULL);
            arr_to_eq(ref_buf, print_buf, 2);
        end
    end
}